name: Android Release

on:
  push:
    tags:
      - "*"

  # 3 - Allows you to run this workflow manually from the Actions tab from your GitHub repo (a workflow run is made up of one or more jobs that can run sequentially or in paralle)
  workflow_dispatch:

env:
  JAVA_VERSION: "12.x"
  FLUTTER_VERSION: "3.3.9"
  FLUTTER_CHANNEL: "stable"
  MAIN_BRANCH: "master"

jobs:
  version:
    name: Updating the code version and commiting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Extract version from tag
        uses: damienaicheh/extract-version-from-tag-action@v1.0.0

      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: ${{env.JAVA_VERSION}}
          cache: "gradle"

      - uses: subosito/flutter-action@v2
        with:
          channel: ${{env.FLUTTER_CHANNEL}}
          flutter-version: ${{env.FLUTTER_VERSION}}
          cache: true

      - name: Get firebase option
        run: echo "${{ secrets.FIREBASE_OPTION }}" > lib/firebase_options.dart

      - name: Get dependencies
        run: flutter pub get

      - name: Change version number
        run: |
          flutter pub run cider release
          flutter pub run cider version ${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}+${{ env.NUMBER_OF_COMMITS }}

      - name: Commit changes
        uses: EndBug/add-and-commit@v7
        with:
          author_name: GitHub Actions
          author_email: actions@github.com
          branch: ${{ env.MAIN_BRANCH }}
          message: "Update version on pubspec.yaml & update change log"
          push: origin ${{ env.MAIN_BRANCH }} --force

  build:
    name: Create Android Build
    needs: version
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: ${{env.JAVA_VERSION}}
          cache: "gradle"

      - uses: subosito/flutter-action@v2
        with:
          channel: ${{env.FLUTTER_CHANNEL}}
          flutter-version: ${{env.FLUTTER_VERSION}}
          cache: true

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties

      - name: Create firebase_options.dart
        run: echo "${{ secrets.FIREBASE_OPTION }}" > lib/firebase_options.dart

      - name: Create google-services.json
        run: echo "${{ secrets.GOOGLE_SERVICES }}" > android/app/google-services.json

      - name: Create google-services.json
        run: echo "${{ secrets.FACEBOOK_SECRET }}" > android/app/src/main/res/values/strings.xml

      - name: Get dependencies
        run: flutter pub get

      - name: Start release build
        run: flutter build apk --release

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release
          path: build/app/outputs/flutter-apk

  deploy:
    name: Deploy Android Build
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Get Android Build from artifacts
        uses: actions/download-artifact@v2
        with:
          name: app-release

      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          # groups: testers
          file: app-release.apk
